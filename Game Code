#include <hidef.h>      /* common defines and macros */
#include "derivative.h"      /* derivative-specific definitions */
#include <stdio.h>
#include <stdlib.h>
#include <time.h>


uint randArray[100];         /*maximum sequence*/

uint flashTime = 150;      /*the time between the LED flashes*/
uint i;
uint j;
                                 
uint n;                     /*size of sequence*/
uint RandomSeed=0;
uint gameArray[100];            /*an array of n-values of randArray*/
uint UserInput[100] ;

unsigned char period1 = 25;   /*The periods of the frequencies generated by each button*/
unsigned char period2 = 27;
unsigned char period3 = 30;
unsigned char period4 = 40;
unsigned char period5 = 50;
unsigned char period6 = 60;
unsigned char period7 = 70;
unsigned char period8 = 80;
unsigned int sequenceSpeed = 30000;
unsigned char userLose;

void wait(ulong iteration)

{                               /*wait function to create a timer*/  
	while( iteration > 0)
	{
		--iteration;
	}
}

void tone(uint period){
uint k;
  for(k=0; k<flashTime;k++){
    
    PORTE = 0b00000100;
    wait(period);
    PORTE = 0b00000000;
    wait(period);
  }
}
  

void main(void)
{
  
 
  DDRA = 0xFF;                    /*Set PORTA to output*/
  DDRB = 0x00;                    /*set PORTB to input*/
  DDRE = 0b11111100;              /*PORT E bits 0 and 1 kept as input becasue they cannot be changed, buts 2 - 7 changed to outputs*/
  TSCR1=0x80;                                         /*enable timer */ 
  TSCR2=0x05;                                         /* no interrupt, prescaler=32  (see section ()) */

 for(;;)
 {
 
  while(PORTE_BIT0 == 1)                      /*only run code when on/off switch is pressed*/
  {     

  RandomSeed=TCNT;                     /* Read the value at the 16-bit timer counter register*/
  srand(RandomSeed);                   /* use TCNT as a random seed for the random generator*/

  userLose = 0;
 while(userLose!=1){
  
  
 for(i=0;i<100;i++)               /*creates a pseudo random array of size 100 where each bit is between 0 and 7*/
 {                                /*'real' random algorithms will be used eventually*/
  randArray[i]=(rand()%8);

 }
 for(n=0;n<=99;n++){              /*loop that changes the level*/
 
 /*start of computer output*/
 
 wait(10000);
  
 for(j=0;j<=n;j++)                /*this for loop adds the first n values of randArray to gameArray*/        
 {
  gameArray[j]=randArray[j]; 
           
  switch(gameArray[j])            /*switch statement assigns an LED to the 0-7 values*/
  {
      case 0 :
         PORTA = 0x01;
         tone(period1);
         PORTA = 0x00;
         break;
      case 1 :
        PORTA = 0x02;
         tone(period2);
         PORTA = 0x00;
         
         break;
      case 2 :
         PORTA = 0x04;
         tone(period3);
         PORTA = 0x00;
         break;
      case 3 :
         PORTA = 0x08;
         tone(period4);
         PORTA = 0x00;
         break;
      case 4 :
         PORTA = 0x10;
         tone(period5);
         PORTA = 0x00;
         break;
      case 5 :
         PORTA = 0x20;
         tone(period6);
         PORTA = 0x00;
         break;
      case 6 :
        PORTA = 0x40;
         tone(period7);
         PORTA = 0x00;
         break;
      case 7 :
         PORTA = 0x80;
         tone(period8);
         PORTA = 0x00;
         break;   
      default:
      PORTA=0x00;
      break;
  }
  wait(sequenceSpeed);                          /*the time between the LED flashes*/
 }
 /*end of computer output*/
 
  /*start of userInput code*/
  
  for(j=0;j<= n ; ) {
                   
                   switch(PORTB)          /*switch statement assigns an LED to the 0-7 values*/
  {
      case 0b11111110 :
         UserInput[j]=0;
         for(;;){
         PORTE = 0b00000100;
         wait(period1);
         PORTE = 0b00000000;
         wait(period1);
         PORTA = 0x01;
         if(PORTB!=0b11111110){
          break;
         }
         }
         j++;
         break;
      case 0b11111101:
        UserInput[j]=1;
         for(;;){
         PORTE = 0b00000100;
         wait(period2);
         PORTE = 0b00000000;
         wait(period2);
         PORTA = 0x02;
         if(PORTB!=0b11111101){
          break;
         }
         }
         j++;
         break;
      case 0b11111011 :
         UserInput[j]=2;
         for(;;){
         PORTE = 0b00000100;
         wait(period3);
         PORTE = 0b00000000;
         wait(period3);
         PORTA = 0x04;
         if(PORTB!=0b11111011){
          break;
         }
         }
         j++;
         break;            /*push button 3 is not working  */
      case 0b11110111 :
         UserInput[j]=3;
         for(;;){
         PORTE = 0b00000100;
         wait(period4);
         PORTE = 0b00000000;
         wait(period4);
         PORTA = 0x08;
         if(PORTB!=0b11110111){
          break;
         }
         }
         j++;
         break;
      case 0b11101111 :
         UserInput[j]=4;
         for(;;){
         PORTE = 0b00000100;
         wait(period5);
         PORTE = 0b00000000;
         wait(period5);
         PORTA = 0x10;
         if(PORTB!=0b11101111){
          break;
         }
         }
         j++;
         break;
      case 0b11011111 :
         UserInput[j]=5;
         for(;;){
         PORTE = 0b00000100;
         wait(period6);
         PORTE = 0b00000000;
         wait(period6);
         PORTA = 0x20;
         if(PORTB!=0b11011111){
          break;
         }
         }
         j++;
         break;
      case  0b10111111:
        UserInput[j]=6;
         for(;;){
         PORTE = 0b00000100;
         wait(period7);
         PORTE = 0b00000000;
         wait(period7);
         PORTA = 0x40;
         if(PORTB!=0b10111111){
          break;
         }
         }
         j++;
         break;
      case 0b01111111 :
         UserInput[j]=7;
         for(;;){
         PORTE = 0b00000100;
         wait(period8);
         PORTE = 0b00000000;
         wait(period8);
         PORTA = 0x80;
         if(PORTB!=0b01111111){
          break;
         }
         }
         j++;
         break;   
      default:
      PORTA=0x00;
      break;
  }
                
                     
             
                    
                   /*check timer here*/
                
               } 
                PORTA=0x00;
               wait(5000);
              
 
  /*end of userInput code*/
  
  /*start of comparison code*/
  
  wait(2*sequenceSpeed);
  for(i=0;i<=n;i++){
    if(UserInput[i]!=gameArray[i]){
    PORTA = 0xFF;
    userLose=1;
    wait(90000);
    break;                                     /*if UserInput is wrong leave the loop*/
    }
    
    /*end of comparison code*/
    
    if(userLose==1){                           /*continue leaving the loop...*/
      break;
    }
  }
  if(userLose==1){                             
    break;
  }
 }                                              /*and now we're in the for loop that changes the level*/

}  /*end of while userLose loop*/
  }  /*end of while switch is on*/
 }/* end of forever loop*/

  
}

